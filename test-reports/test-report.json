{"created": 1753456110.6849556, "duration": 0.5468199253082275, "exitcode": 1, "root": "/app", "environment": {}, "summary": {"failed": 5, "passed": 13, "total": 18, "collected": 37}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests", "type": "Package"}]}, {"nodeid": "tests/test_analytics.py", "outcome": "passed", "result": [{"nodeid": "tests/test_analytics.py::test_get_health_summary_success", "type": "Function", "lineno": 35}, {"nodeid": "tests/test_analytics.py::test_get_health_summary_no_data", "type": "Function", "lineno": 52}, {"nodeid": "tests/test_analytics.py::test_get_weekly_summary_success", "type": "Function", "lineno": 67}, {"nodeid": "tests/test_analytics.py::test_get_weekly_summary_failure", "type": "Function", "lineno": 104}, {"nodeid": "tests/test_analytics.py::test_get_health_correlations_success", "type": "Function", "lineno": 124}, {"nodeid": "tests/test_analytics.py::test_get_health_correlations_failure", "type": "Function", "lineno": 141}, {"nodeid": "tests/test_analytics.py::test_get_health_trends_success", "type": "Function", "lineno": 155}, {"nodeid": "tests/test_analytics.py::test_get_health_trends_failure", "type": "Function", "lineno": 180}]}, {"nodeid": "tests/test_auth.py", "outcome": "passed", "result": [{"nodeid": "tests/test_auth.py::test_register_success", "type": "Function", "lineno": 8}, {"nodeid": "tests/test_auth.py::test_register_existing_email", "type": "Function", "lineno": 32}, {"nodeid": "tests/test_auth.py::test_register_invalid_email", "type": "Function", "lineno": 54}, {"nodeid": "tests/test_auth.py::test_register_missing_fields", "type": "Function", "lineno": 69}, {"nodeid": "tests/test_auth.py::test_login_success", "type": "Function", "lineno": 82}, {"nodeid": "tests/test_auth.py::test_login_invalid_password", "type": "Function", "lineno": 107}, {"nodeid": "tests/test_auth.py::test_login_missing_fields", "type": "Function", "lineno": 128}, {"nodeid": "tests/test_auth.py::test_verify_token_success", "type": "Function", "lineno": 141}, {"nodeid": "tests/test_auth.py::test_verify_token_invalid", "type": "Function", "lineno": 163}, {"nodeid": "tests/test_auth.py::test_logout", "type": "Function", "lineno": 171}]}, {"nodeid": "tests/test_entry.py", "outcome": "passed", "result": [{"nodeid": "tests/test_entry.py::test_create_entry_success", "type": "Function", "lineno": 35}, {"nodeid": "tests/test_entry.py::test_create_entry_missing_text", "type": "Function", "lineno": 55}, {"nodeid": "tests/test_entry.py::test_get_entries_success", "type": "Function", "lineno": 73}, {"nodeid": "tests/test_entry.py::test_get_entries_missing_user_id", "type": "Function", "lineno": 100}, {"nodeid": "tests/test_entry.py::test_update_entry_success", "type": "Function", "lineno": 113}, {"nodeid": "tests/test_entry.py::test_update_entry_not_found", "type": "Function", "lineno": 144}, {"nodeid": "tests/test_entry.py::test_delete_entry_success", "type": "Function", "lineno": 158}, {"nodeid": "tests/test_entry.py::test_delete_entry_not_found", "type": "Function", "lineno": 181}, {"nodeid": "tests/test_entry.py::test_bulk_delete_entries_success", "type": "Function", "lineno": 193}]}, {"nodeid": "tests/test_family.py", "outcome": "passed", "result": [{"nodeid": "tests/test_family.py::test_get_family_profiles_success", "type": "Function", "lineno": 39}, {"nodeid": "tests/test_family.py::test_get_family_profiles_no_token", "type": "Function", "lineno": 55}, {"nodeid": "tests/test_family.py::test_create_family_profile_success", "type": "Function", "lineno": 64}, {"nodeid": "tests/test_family.py::test_create_family_profile_missing_name", "type": "Function", "lineno": 84}, {"nodeid": "tests/test_family.py::test_create_family_profile_duplicate_name", "type": "Function", "lineno": 97}, {"nodeid": "tests/test_family.py::test_update_family_profile_success", "type": "Function", "lineno": 125}, {"nodeid": "tests/test_family.py::test_update_family_profile_not_found", "type": "Function", "lineno": 141}, {"nodeid": "tests/test_family.py::test_delete_family_profile_success", "type": "Function", "lineno": 156}, {"nodeid": "tests/test_family.py::test_delete_family_profile_only_admin_blocked", "type": "Function", "lineno": 181}]}, {"nodeid": "tests/test_health.py", "outcome": "passed", "result": [{"nodeid": "tests/test_health.py::test_health_check", "type": "Function", "lineno": 1}]}, {"nodeid": "tests", "outcome": "passed", "result": [{"nodeid": "tests/test_analytics.py", "type": "Module"}, {"nodeid": "tests/test_auth.py", "type": "Module"}, {"nodeid": "tests/test_entry.py", "type": "Module"}, {"nodeid": "tests/test_family.py", "type": "Module"}, {"nodeid": "tests/test_health.py", "type": "Module"}]}], "tests": [{"nodeid": "tests/test_analytics.py::test_get_health_summary_success", "lineno": 35, "outcome": "failed", "keywords": ["test_get_health_summary_success", "test_analytics.py", "tests", "app", ""], "setup": {"duration": 0.14088878499751445, "outcome": "passed", "stdout": "\u2705 Authentication routes registered\n\u2705 Family routes registered\n\u2705 Entry routes registered\n\u2705 Analytics routes registered\n"}, "call": {"duration": 0.02236279399949126, "outcome": "failed", "crash": {"path": "/app/tests/test_analytics.py", "lineno": 48, "message": "assert 500 == 200\n +  where 500 = <WrapperTestResponse 41 bytes [500 INTERNAL SERVER ERROR]>.status_code"}, "traceback": [{"path": "tests/test_analytics.py", "lineno": 48, "message": "in test_get_health_summary_success"}], "stdout": "Error fetching summary: cannot access local variable 'cursor' where it is not associated with a value\n", "longrepr": "tests/test_analytics.py:48: in test_get_health_summary_success\n    assert response.status_code == 200\nE   assert 500 == 200\nE    +  where 500 = <WrapperTestResponse 41 bytes [500 INTERNAL SERVER ERROR]>.status_code"}, "teardown": {"duration": 0.00044409599649952725, "outcome": "passed"}}, {"nodeid": "tests/test_analytics.py::test_get_health_summary_no_data", "lineno": 52, "outcome": "failed", "keywords": ["test_get_health_summary_no_data", "test_analytics.py", "tests", "app", ""], "setup": {"duration": 0.00099365600181045, "outcome": "passed"}, "call": {"duration": 0.006513415995868854, "outcome": "failed", "crash": {"path": "/usr/local/lib/python3.11/site-packages/psycopg2/extras.py", "lineno": 236, "message": "psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"families_email_key\"\nDETAIL:  Key (email)=(test@example.com) already exists."}, "traceback": [{"path": "tests/test_analytics.py", "lineno": 55, "message": "in test_get_health_summary_no_data"}, {"path": "tests/conftest.py", "lineno": 57, "message": "in seed_family_user"}, {"path": "/usr/local/lib/python3.11/site-packages/psycopg2/extras.py", "lineno": 236, "message": "in execute"}], "longrepr": "tests/test_analytics.py:55: in test_get_health_summary_no_data\n    _, user_id = seed_family_user()\n                 ^^^^^^^^^^^^^^^^^^\ntests/conftest.py:57: in seed_family_user\n    cursor.execute(\"\"\"\n/usr/local/lib/python3.11/site-packages/psycopg2/extras.py:236: in execute\n    return super().execute(query, vars)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"families_email_key\"\nE   DETAIL:  Key (email)=(test@example.com) already exists."}, "teardown": {"duration": 0.0003800669946940616, "outcome": "passed"}}, {"nodeid": "tests/test_analytics.py::test_get_weekly_summary_success", "lineno": 67, "outcome": "passed", "keywords": ["test_get_weekly_summary_success", "__wrapped__", "patchings", "test_analytics.py", "tests", "app", ""], "setup": {"duration": 0.0010076869948534295, "outcome": "passed"}, "call": {"duration": 0.0029174119990784675, "outcome": "passed", "stdout": "\ud83d\udd04 Generating weekly summary for user 1\n\ud83d\udd0d Raw summary object: <MagicMock name='generate_weekly_summary()' id='125988253524944'>\n\u2705 Weekly summary response data: {'success': True, 'period': {'start_date': '2025-07-01', 'end_date': '2025-07-07', 'total_entries': 5}, 'health_metrics': {'mood': {'average': 7.2, 'trend': 'upward', 'scale': '1-10 (higher is better)'}, 'energy': {'average': 6.8, 'trend': 'stable', 'scale': '1-10 (higher is better)'}, 'pain': {'average': 2.5, 'trend': 'downward', 'scale': '0-10 (lower is better)'}, 'sleep': {'average_hours': 7.5, 'trend': 'stable', 'scale': 'hours per night'}, 'stress': {'average': 3.5, 'trend': 'stable', 'scale': '0-10 (lower is better)'}}, 'correlations': [{'factor': 'sleep', 'impact': 'energy'}], 'insights': {'key_insights': ['Great week!'], 'potential_triggers': ['junk food'], 'recommendations': ['Sleep earlier'], 'areas_of_concern': ['low energy'], 'positive_patterns': ['regular exercise']}, 'generated_at': '2025-07-25T15:08:30.539232'}\n"}, "teardown": {"duration": 0.0002971600042656064, "outcome": "passed"}}, {"nodeid": "tests/test_analytics.py::test_get_weekly_summary_failure", "lineno": 104, "outcome": "passed", "keywords": ["test_get_weekly_summary_failure", "__wrapped__", "patchings", "test_analytics.py", "tests", "app", ""], "setup": {"duration": 0.001060843002051115, "outcome": "passed"}, "call": {"duration": 0.0016993489989545196, "outcome": "passed", "stdout": "\ud83d\udd04 Generating weekly summary for user 1\n\u274c Error generating weekly summary: AI Engine Failure\n"}, "teardown": {"duration": 0.000484862997836899, "outcome": "passed"}}, {"nodeid": "tests/test_analytics.py::test_get_health_correlations_success", "lineno": 124, "outcome": "passed", "keywords": ["test_get_health_correlations_success", "__wrapped__", "patchings", "test_analytics.py", "tests", "app", ""], "setup": {"duration": 0.000903666004887782, "outcome": "passed"}, "call": {"duration": 0.0017450779996579513, "outcome": "passed"}, "teardown": {"duration": 0.00029575500229839236, "outcome": "passed"}}, {"nodeid": "tests/test_analytics.py::test_get_health_correlations_failure", "lineno": 141, "outcome": "passed", "keywords": ["test_get_health_correlations_failure", "__wrapped__", "patchings", "test_analytics.py", "tests", "app", ""], "setup": {"duration": 0.0009129069949267432, "outcome": "passed"}, "call": {"duration": 0.0013445629956549965, "outcome": "passed", "stdout": "\u274c Error getting correlations: DB error\n"}, "teardown": {"duration": 0.000303067994536832, "outcome": "passed"}}, {"nodeid": "tests/test_analytics.py::test_get_health_trends_success", "lineno": 155, "outcome": "passed", "keywords": ["test_get_health_trends_success", "__wrapped__", "patchings", "test_analytics.py", "tests", "app", ""], "setup": {"duration": 0.0009215060053975321, "outcome": "passed"}, "call": {"duration": 0.0019934770025429316, "outcome": "passed"}, "teardown": {"duration": 0.0002992790032294579, "outcome": "passed"}}, {"nodeid": "tests/test_analytics.py::test_get_health_trends_failure", "lineno": 180, "outcome": "passed", "keywords": ["test_get_health_trends_failure", "__wrapped__", "patchings", "test_analytics.py", "tests", "app", ""], "setup": {"duration": 0.000878204002219718, "outcome": "passed"}, "call": {"duration": 0.0012872209990746342, "outcome": "passed", "stdout": "\u274c Error getting trends: Trend calc failed\n"}, "teardown": {"duration": 0.0002977230033138767, "outcome": "passed"}}, {"nodeid": "tests/test_auth.py::test_register_success", "lineno": 8, "outcome": "failed", "keywords": ["test_register_success", "test_auth.py", "tests", "app", ""], "setup": {"duration": 0.0006242059971555136, "outcome": "passed"}, "call": {"duration": 0.009005765001347754, "outcome": "failed", "crash": {"path": "/app/tests/test_auth.py", "lineno": 28, "message": "assert 400 == 200\n +  where 400 = <WrapperTestResponse 42 bytes [400 BAD REQUEST]>.status_code"}, "traceback": [{"path": "tests/test_auth.py", "lineno": 28, "message": "in test_register_success"}], "stdout": "\ud83d\udd04 Registration attempt for email: test@example.com, family: TestFamily\n", "longrepr": "tests/test_auth.py:28: in test_register_success\n    assert response.status_code == 200\nE   assert 400 == 200\nE    +  where 400 = <WrapperTestResponse 42 bytes [400 BAD REQUEST]>.status_code"}, "teardown": {"duration": 0.00033152799733215943, "outcome": "passed"}}, {"nodeid": "tests/test_auth.py::test_register_existing_email", "lineno": 32, "outcome": "passed", "keywords": ["test_register_existing_email", "test_auth.py", "tests", "app", ""], "setup": {"duration": 0.000676575000397861, "outcome": "passed"}, "call": {"duration": 0.008445314000709914, "outcome": "passed", "stdout": "\ud83d\udd04 Registration attempt for email: test@example.com, family: TestFamily\n"}, "teardown": {"duration": 0.0002962529979413375, "outcome": "passed"}}, {"nodeid": "tests/test_auth.py::test_register_invalid_email", "lineno": 54, "outcome": "passed", "keywords": ["test_register_invalid_email", "test_auth.py", "tests", "app", ""], "setup": {"duration": 0.0006391409988282248, "outcome": "passed"}, "call": {"duration": 0.001129716998548247, "outcome": "passed", "stdout": "\ud83d\udd04 Registration attempt for email: invalidemail, family: TestFamily\n"}, "teardown": {"duration": 0.0002809510042425245, "outcome": "passed"}}, {"nodeid": "tests/test_auth.py::test_register_missing_fields", "lineno": 69, "outcome": "passed", "keywords": ["test_register_missing_fields", "test_auth.py", "tests", "app", ""], "setup": {"duration": 0.0006212279986357316, "outcome": "passed"}, "call": {"duration": 0.0009247720008715987, "outcome": "passed", "stdout": "\ud83d\udd04 Registration attempt for email: , family: \n"}, "teardown": {"duration": 0.00026690499362302944, "outcome": "passed"}}, {"nodeid": "tests/test_auth.py::test_login_success", "lineno": 82, "outcome": "passed", "keywords": ["test_login_success", "test_auth.py", "tests", "app", ""], "setup": {"duration": 0.0006199260024004616, "outcome": "passed"}, "call": {"duration": 0.009056118004082236, "outcome": "passed"}, "teardown": {"duration": 0.0002999070056830533, "outcome": "passed"}}, {"nodeid": "tests/test_auth.py::test_login_invalid_password", "lineno": 107, "outcome": "passed", "keywords": ["test_login_invalid_password", "test_auth.py", "tests", "app", ""], "setup": {"duration": 0.0006436189942178316, "outcome": "passed"}, "call": {"duration": 0.008681090002937708, "outcome": "passed"}, "teardown": {"duration": 0.00030151900136843324, "outcome": "passed"}}, {"nodeid": "tests/test_auth.py::test_login_missing_fields", "lineno": 128, "outcome": "passed", "keywords": ["test_login_missing_fields", "test_auth.py", "tests", "app", ""], "setup": {"duration": 0.0006274820043472573, "outcome": "passed"}, "call": {"duration": 0.0008861189999151975, "outcome": "passed"}, "teardown": {"duration": 0.00026057099603349343, "outcome": "passed"}}, {"nodeid": "tests/test_auth.py::test_verify_token_success", "lineno": 141, "outcome": "failed", "keywords": ["test_verify_token_success", "test_auth.py", "tests", "app", ""], "setup": {"duration": 0.0006118370001786388, "outcome": "passed"}, "call": {"duration": 0.001223095998284407, "outcome": "failed", "crash": {"path": "/usr/local/lib/python3.11/site-packages/werkzeug/local.py", "lineno": 519, "message": "RuntimeError: Working outside of application context.\n\nThis typically means that you attempted to use functionality that needed\nthe current application. To solve this, set up an application context\nwith app.app_context(). See the documentation for more information."}, "traceback": [{"path": "tests/test_auth.py", "lineno": 151, "message": "in test_verify_token_success"}, {"path": "/usr/local/lib/python3.11/site-packages/flask_jwt_extended/utils.py", "lineno": 174, "message": "in create_access_token"}, {"path": "/usr/local/lib/python3.11/site-packages/flask_jwt_extended/internal_utils.py", "lineno": 29, "message": "in get_jwt_manager"}, {"path": "/usr/local/lib/python3.11/site-packages/werkzeug/local.py", "lineno": 318, "message": "in __get__"}, {"path": "/usr/local/lib/python3.11/site-packages/werkzeug/local.py", "lineno": 519, "message": "in _get_current_object"}], "longrepr": "tests/test_auth.py:151: in test_verify_token_success\n    token = create_access_token(identity=\"1\")\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/flask_jwt_extended/utils.py:174: in create_access_token\n    jwt_manager = get_jwt_manager()\n                  ^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/flask_jwt_extended/internal_utils.py:29: in get_jwt_manager\n    return current_app.extensions[\"flask-jwt-extended\"]\n           ^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/werkzeug/local.py:318: in __get__\n    obj = instance._get_current_object()\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/werkzeug/local.py:519: in _get_current_object\n    raise RuntimeError(unbound_message) from None\nE   RuntimeError: Working outside of application context.\nE   \nE   This typically means that you attempted to use functionality that needed\nE   the current application. To solve this, set up an application context\nE   with app.app_context(). See the documentation for more information."}, "teardown": {"duration": 0.0003530200046952814, "outcome": "passed"}}, {"nodeid": "tests/test_auth.py::test_verify_token_invalid", "lineno": 163, "outcome": "passed", "keywords": ["test_verify_token_invalid", "test_auth.py", "tests", "app", ""], "setup": {"duration": 0.0006936379941180348, "outcome": "passed"}, "call": {"duration": 0.0011142470029881224, "outcome": "passed", "stdout": "\u274c Missing token error: Missing Authorization Header\n"}, "teardown": {"duration": 0.0003051710009458475, "outcome": "passed"}}, {"nodeid": "tests/test_auth.py::test_logout", "lineno": 171, "outcome": "failed", "keywords": ["test_logout", "test_auth.py", "tests", "app", ""], "setup": {"duration": 0.0006594779988517985, "outcome": "passed"}, "call": {"duration": 0.00023405599495163187, "outcome": "failed", "crash": {"path": "/usr/local/lib/python3.11/site-packages/werkzeug/local.py", "lineno": 519, "message": "RuntimeError: Working outside of application context.\n\nThis typically means that you attempted to use functionality that needed\nthe current application. To solve this, set up an application context\nwith app.app_context(). See the documentation for more information."}, "traceback": [{"path": "tests/test_auth.py", "lineno": 174, "message": "in test_logout"}, {"path": "/usr/local/lib/python3.11/site-packages/flask_jwt_extended/utils.py", "lineno": 174, "message": "in create_access_token"}, {"path": "/usr/local/lib/python3.11/site-packages/flask_jwt_extended/internal_utils.py", "lineno": 29, "message": "in get_jwt_manager"}, {"path": "/usr/local/lib/python3.11/site-packages/werkzeug/local.py", "lineno": 318, "message": "in __get__"}, {"path": "/usr/local/lib/python3.11/site-packages/werkzeug/local.py", "lineno": 519, "message": "in _get_current_object"}], "longrepr": "tests/test_auth.py:174: in test_logout\n    token = create_access_token(identity=\"1\")\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/flask_jwt_extended/utils.py:174: in create_access_token\n    jwt_manager = get_jwt_manager()\n                  ^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/flask_jwt_extended/internal_utils.py:29: in get_jwt_manager\n    return current_app.extensions[\"flask-jwt-extended\"]\n           ^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/werkzeug/local.py:318: in __get__\n    obj = instance._get_current_object()\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/werkzeug/local.py:519: in _get_current_object\n    raise RuntimeError(unbound_message) from None\nE   RuntimeError: Working outside of application context.\nE   \nE   This typically means that you attempted to use functionality that needed\nE   the current application. To solve this, set up an application context\nE   with app.app_context(). See the documentation for more information."}, "teardown": {"duration": 0.000790512996900361, "outcome": "passed"}}]}