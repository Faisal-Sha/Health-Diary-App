version: "3.9"
services:
  nginx:
    image: nginx:latest
    container_name: nginx-reverse-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    depends_on:
      - frontend
      - backend

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: >
      sh -c "certbot certonly --webroot --webroot-path=/var/www/certbot
      --email ${CERTBOT_EMAIL} --agree-tos --no-eff-email
      -d ${PRIMARY_DOMAIN} -d ${WWW_DOMAIN}"

  frontend:
    image: sakjin/health-diary-frontend:latest
    # Don’t publish container port to host – nginx will proxy to this network service
    expose:
      - "80"
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL}
    depends_on:
      - backend

  backend:
    image: sakjin/health-diary:latest
    ports:
      - "5000:5000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - FLASK_PORT=5000
      - FLASK_DEBUG=false
    depends_on:
      - db

  db:
    image: postgres:15
    container_name: health-diary-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data

volumes:
  db_data:
