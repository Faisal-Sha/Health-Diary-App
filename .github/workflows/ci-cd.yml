name: Backend CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Run Backend Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run Tests
        run: |
          cd server
          docker compose --env-file .env.test -f ../docker-compose.test.yml build
          docker compose --env-file .env.test -f ../docker-compose.test.yml run --rm backend-test
          docker compose --env-file .env.test -f ../docker-compose.test.yml down -v

      - name: Upload Test Reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: server/test-reports

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          cd server
          docker build -t sakjin/health-diary:latest -f Dockerfile .
          docker push sakjin/health-diary:latest

      # OPTIONAL: Uncomment when you want to auto-deploy to server
      - name: Deploy to DigitalOcean Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DO_SERVER_IP }}
          username: ${{ secrets.DO_SERVER_USER }}
          key: ${{ secrets.DO_SERVER_SSH_KEY }}
          script: |
            set -e
            cd /home/health-diary/

            # Write/refresh .env.prod from GitHub Secrets
            cat > .env.prod << 'EOF'
            CERTBOT_EMAIL=${{ secrets.PROD_CERTBOT_EMAIL }}
            PRIMARY_DOMAIN=${{ secrets.PROD_PRIMARY_DOMAIN }}
            WWW_DOMAIN=${{ secrets.PROD_WWW_DOMAIN }}

            REACT_APP_API_URL=${{ secrets.PROD_REACT_APP_API_URL }}

            OPENAI_API_KEY=${{ secrets.PROD_OPENAI_API_KEY }}
            POSTGRES_USER=${{ secrets.PROD_DB_USER }}
            POSTGRES_PASSWORD=${{ secrets.PROD_DB_PASSWORD }}
            POSTGRES_DB=${{ secrets.PROD_DB_NAME }}
            JWT_SECRET_KEY=${{ secrets.PROD_JWT_SECRET }}
            DATABASE_URL=postgresql://${{ secrets.PROD_DB_USER }}:${{ secrets.PROD_DB_PASSWORD }}@db/${{ secrets.PROD_DB_NAME }}
            EOF
            chmod 600 .env.prod

            docker pull sakjin/health-diary:latest
            docker pull sakjin/health-diary-frontend:latest

            docker compose --env-file .env.prod -f docker-compose.prod.yml up -d frontend backend
